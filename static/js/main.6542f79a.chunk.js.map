{"version":3,"sources":["redux/types.js","redux/likesReducer.js","redux/inputReducer.js","redux/commentsReducer.js","redux/appReducer.js","redux/rootReducer.js","redux/actions.js","redux/middleware.js","Likes.js","SingleComment.js","Comments.js","Spin.js","App.js","index.js"],"names":["INCREMENT","DECREMENT","INPUT_TEXT","COMMENT_CREATE","COMMENT_UPDATE","COMMENT_DELETE","COMMENTS_LOAD","LOADER_DISPLAY_ON","LOADER_DISPLAY_OFF","ERROR_DISPLAY_ON","ERROR_DISPLAY_OFF","intialState","likes","text","comments","loading","error","rootReducer","combineReducers","likesReducer","state","action","type","inputReducer","commentsReducer","data","commentsNew","map","res","name","id","itemIndex","findIndex","nextComments","slice","appReducer","loaderOff","errorOn","dispatch","setTimeout","badWords","connect","onIncrementLikes","onDecrementLikes","props","className","onClick","SingleComment","useState","commentText","setCommentText","useDispatch","useEffect","onSubmit","e","preventDefault","commentUpdate","commentDelete","value","onChange","target","hidden","Comments","textComment","setTextComment","useSelector","a","fetch","response","json","jsonData","uniqid","commentCreate","placeholder","length","Spin","spinner","color","height","width","visible","App","console","log","src","alt","store","createStore","compose","applyMiddleware","thunk","next","some","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6542f79a.chunk.js","sourcesContent":["export const INCREMENT = \"INCREMENT\";\r\nexport const DECREMENT = \"DECREMENT\";\r\nexport const INPUT_TEXT = \"INPUT_TEXT\";\r\nexport const COMMENT_CREATE = \"COMMENT_CREATE\";\r\nexport const COMMENT_UPDATE = \"COMMENT_UPDATE\";\r\nexport const COMMENT_DELETE = \"COMMENT_DELETE\";\r\n\r\nexport const COMMENTS_LOAD = \"COMMENTS_LOAD\";\r\nexport const LOADER_DISPLAY_ON = \"LOADER_DISPLAY_ON\";\r\nexport const LOADER_DISPLAY_OFF = \"LOADER_DISPLAY_OFF\";\r\n\r\nexport const ERROR_DISPLAY_ON = \"ERROR_DISPLAY_ON\";\r\nexport const ERROR_DISPLAY_OFF = \"ERROR_DISPLAY_OFF\";\r\n","import { INCREMENT, DECREMENT } from \"./types\";\r\n\r\nconst intialState = {\r\n  likes: 0,\r\n};\r\n\r\nexport const likesReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case INCREMENT:\r\n      return {\r\n        ...state,\r\n        likes: state.likes + 1,\r\n      };\r\n    case DECREMENT:\r\n      return {\r\n        ...state,\r\n        likes: state.likes - 1,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { INPUT_TEXT } from \"./types\";\r\n\r\nconst intialState = {\r\n  text: \"\",\r\n};\r\n\r\nexport const inputReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case INPUT_TEXT:\r\n      return {\r\n        ...state,\r\n        text: action.text,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  COMMENT_CREATE,\r\n  COMMENTS_LOAD,\r\n  COMMENT_UPDATE,\r\n  COMMENT_DELETE,\r\n} from \"./types\";\r\n\r\nconst intialState = {\r\n  comments: [],\r\n};\r\n\r\nexport const commentsReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case COMMENT_CREATE:\r\n      return {\r\n        ...state,\r\n        comments: [...state.comments, action.data],\r\n      };\r\n\r\n    case COMMENTS_LOAD:\r\n      const commentsNew = action.data.map((res) => {\r\n        return {\r\n          text: res.name,\r\n          id: res.id,\r\n        };\r\n      });\r\n      return {\r\n        ...state,\r\n        comments: commentsNew,\r\n      };\r\n\r\n    case COMMENT_UPDATE:\r\n      const { data } = action;\r\n      const { comments } = state;\r\n      const itemIndex = comments.findIndex((res) => res.id === data.id);\r\n\r\n      const nextComments = [\r\n        ...comments.slice(0, itemIndex),\r\n        data,\r\n        ...comments.slice(itemIndex + 1),\r\n      ];\r\n\r\n      return {\r\n        ...state,\r\n        comments: nextComments,\r\n      };\r\n\r\n    case COMMENT_DELETE:\r\n      return (() => {\r\n        const { id } = action;\r\n        const { comments } = state;\r\n        const itemIndex = comments.findIndex((res) => res.id === id);\r\n\r\n        const nextComments = [\r\n          ...comments.slice(0, itemIndex),\r\n          ...comments.slice(itemIndex + 1),\r\n        ];\r\n\r\n        return {\r\n          ...state,\r\n          comments: nextComments,\r\n        };\r\n      })();\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  LOADER_DISPLAY_ON,\r\n  LOADER_DISPLAY_OFF,\r\n  ERROR_DISPLAY_ON,\r\n  ERROR_DISPLAY_OFF,\r\n} from \"./types\";\r\n\r\nconst intialState = {\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const appReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case LOADER_DISPLAY_ON:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case LOADER_DISPLAY_OFF:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    case ERROR_DISPLAY_ON:\r\n      return {\r\n        ...state,\r\n        error: action.text,\r\n      };\r\n\r\n    case ERROR_DISPLAY_OFF:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { likesReducer } from \"./likesReducer\";\r\nimport { inputReducer } from \"./inputReducer\";\r\nimport { commentsReducer } from \"./commentsReducer\";\r\nimport { appReducer } from \"./appReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  likesReducer,\r\n  inputReducer,\r\n  commentsReducer,\r\n  appReducer,\r\n});\r\n","import {\r\n  INCREMENT,\r\n  DECREMENT,\r\n  INPUT_TEXT,\r\n  COMMENT_CREATE,\r\n  COMMENT_UPDATE,\r\n  COMMENT_DELETE,\r\n  COMMENTS_LOAD,\r\n  LOADER_DISPLAY_ON,\r\n  LOADER_DISPLAY_OFF,\r\n  ERROR_DISPLAY_ON,\r\n  ERROR_DISPLAY_OFF,\r\n} from \"./types\";\r\n\r\nexport function incrementLikes() {\r\n  return {\r\n    type: INCREMENT,\r\n  };\r\n}\r\n\r\nexport function decrementLikes() {\r\n  return {\r\n    type: DECREMENT,\r\n  };\r\n}\r\n\r\nexport function inputText(text) {\r\n  return {\r\n    type: INPUT_TEXT,\r\n    text,\r\n  };\r\n}\r\n\r\nexport function commentCreate(text, id) {\r\n  return {\r\n    type: COMMENT_CREATE,\r\n    data: { text, id },\r\n  };\r\n}\r\n\r\nexport function commentUpdate(text, id) {\r\n  return {\r\n    type: COMMENT_UPDATE,\r\n    data: { text, id },\r\n  };\r\n}\r\n\r\nexport function commentDelete(id) {\r\n  return {\r\n    type: COMMENT_DELETE,\r\n    id,\r\n  };\r\n}\r\n\r\nexport function loaderOn() {\r\n  return {\r\n    type: LOADER_DISPLAY_ON,\r\n  };\r\n}\r\nexport function loaderOff() {\r\n  return {\r\n    type: LOADER_DISPLAY_OFF,\r\n  };\r\n}\r\n\r\nexport function errorOn(text) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ERROR_DISPLAY_ON,\r\n      text,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      dispatch(errorOff());\r\n    }, 2000);\r\n  };\r\n}\r\nexport function errorOff() {\r\n  return {\r\n    type: ERROR_DISPLAY_OFF,\r\n  };\r\n}\r\n\r\nexport function commentsLoad() {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(loaderOn());\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/comments?_limit=10\"\r\n      );\r\n      const jsonData = await response.json();\r\n\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: COMMENTS_LOAD,\r\n          data: jsonData,\r\n        });\r\n        dispatch(loaderOff());\r\n      }, 1000);\r\n    } catch (err) {\r\n      dispatch(errorOn(\"Ошибка API\"));\r\n      dispatch(loaderOff());\r\n    }\r\n  };\r\n}\r\n","import { COMMENT_CREATE } from \"./types\";\r\nimport { errorOn } from \"./actions\";\r\n\r\nconst badWords = [\"козел\", \"осел\", \"сука\", \"мразь\", \"бля\", \"блять\"];\r\n\r\nexport function spamFilter({ dispatch }) {\r\n  return function (next) {\r\n    return function (action) {\r\n      if (action.type === COMMENT_CREATE) {\r\n        const hasBadWords = badWords.some((res) =>\r\n          action.data.text.includes(res)\r\n        );\r\n        if (hasBadWords) {\r\n          return dispatch(errorOn(\"Уважайте людей!\"));\r\n        }\r\n      }\r\n      return next(action);\r\n    };\r\n  };\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport { incrementLikes, decrementLikes } from \"./redux/actions\";\r\n\r\nfunction Likes(props) {\r\n  return (\r\n    <div className=\"button-controls\">\r\n      <button onClick={props.onIncrementLikes}>❤ {props.likes}</button>\r\n      <button onClick={props.onDecrementLikes}>Dislike</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { likesReducer } = state;\r\n  return {\r\n    likes: likesReducer.likes,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onIncrementLikes: () => {\r\n      return dispatch(incrementLikes());\r\n    },\r\n    onDecrementLikes: () => {\r\n      return dispatch(decrementLikes());\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Likes);\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { commentUpdate, commentDelete } from \"./redux/actions\";\r\n\r\nfunction SingleComment({ data }) {\r\n  const [commentText, setCommentText] = useState(\"\");\r\n  const { text, id } = data;\r\n  const dispatch = useDispatch();\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    dispatch(commentUpdate(commentText, id));\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    e.preventDefault();\r\n    dispatch(commentDelete(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (text) {\r\n      setCommentText(text);\r\n    }\r\n  }, [text]);\r\n\r\n  const handleInput = (e) => {\r\n    setCommentText(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleUpdate} className=\"comments-item\">\r\n      <div onClick={handleDelete} className=\"comments-item-delete\">\r\n        &times;\r\n      </div>\r\n      <input type=\"text\" value={commentText} onChange={handleInput} />\r\n      <input type=\"submit\" hidden />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SingleComment;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport uniqid from \"uniqid\";\r\n\r\nimport { commentCreate, commentsLoad } from \"./redux/actions\";\r\n\r\nimport SingleComment from \"./SingleComment\";\r\n\r\nfunction Comments(props) {\r\n  const [textComment, setTextComment] = useState(\"\");\r\n  const comments = useSelector((state) => {\r\n    const { commentsReducer } = state;\r\n    return commentsReducer.comments;\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInput = (e) => {\r\n    setTextComment(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const id = uniqid();\r\n    dispatch(commentCreate(textComment, id));\r\n    setTextComment('')\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(commentsLoad());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card-comments\">\r\n      <form onSubmit={handleSubmit} className=\"comments-item-create\">\r\n        <input type=\"text\" value={textComment} onChange={handleInput} placeholder=\"Write your comment ...\" />\r\n        <input type=\"submit\" hidden />\r\n      </form>\r\n      {!!comments.length &&\r\n        comments.map((res) => {\r\n          return <SingleComment key={res.id} data={res} />;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comments;\r\n","import { useSelector } from \"react-redux\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Spin = (props) => {\r\n  const spinner = useSelector((state) => state.appReducer.loading);\r\n\r\n  return (\r\n    <div className=\"loader-styles\">\r\n      <Loader\r\n        type=\"TailSpin\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        visible={spinner}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spin;\r\n","import { useSelector } from \"react-redux\";\n\nimport \"./App.css\";\n\nimport Likes from \"./Likes\";\nimport Comments from \"./Comments\";\nimport Spin from \"./Spin\";\n\nfunction App() {\n  const error = useSelector((state) => state.appReducer.error);\n\n  console.log(\"error >>> \", error);\n  return (\n    <div className=\"App\">\n      <div className=\"wrap\">\n        <Spin />\n        <div className=\"card\">\n          {error && <div className=\"error-message\">{error}</div>}\n          <div className=\"card-image\">\n            <img src=\"./sunset.jpg\" alt=\"sunset\" />\n            <Likes />\n          </div>\n          <Comments />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport thunk from \"redux-thunk\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"./redux/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport { spamFilter } from \"./redux/middleware\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk, spamFilter)\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}